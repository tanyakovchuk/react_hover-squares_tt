{"version":3,"sources":["api/data.js","components/Square/Square.jsx","components/Form/Form.jsx","App.js","reportWebVitals.js","index.js"],"names":["getData","fetch","then","response","json","Square","field","useState","cells","setCells","className","onClick","cellsData","numberOfCells","row","rowData","col","obj","selected","push","map","i","val","classNames","onMouseOver","cell","handleCellHover","column","flat","filter","Form","handleSubmit","data","mode","name","value","onChange","disabled","Object","entries","key","App","setData","setMode","useEffect","a","fetchMyAPI","e","preventDefault","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAEO,SAASA,IACZ,OAAOC,MAHE,oCAIJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,U,2CCA5B,SAASC,EAAT,GAA0B,IAATC,EAAQ,EAARA,MACpB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KA4BA,OACI,sBAAKC,UAAU,UAAf,UACI,wBACIA,UAAU,eACVC,QA9BZ,WAII,IAHA,IAAMC,EAAY,GACZC,EAAgBP,EAEbQ,EAAM,EAAGA,GAAOD,EAAeC,IAAO,CAE3C,IADA,IAAMC,EAAU,GACPC,EAAM,EAAGA,GAAOH,EAAeG,IAAO,CAC3C,IAAMC,EAAM,CACRH,IAAKA,EACLE,IAAKA,EACLE,UAAU,GAGdH,EAAQI,KAAKF,GAEjBL,EAAUO,KAAKJ,GAEnBN,EAASG,IAWL,mBAKA,sBAAKF,UAAU,uBAAf,UACI,uBAAOA,UAAU,SAAjB,SACI,gCACCF,EAAMY,KAAI,SAACN,EAAKO,GAAN,OACP,oBAAYX,UAAU,cAAtB,SACKI,EAAIM,KAAI,SAAAE,GAAG,OACR,oBACIZ,UAAWa,IAAW,cAClB,CAAC,sBAAuBD,EAAIJ,WAChCM,YAAa,kBAtB7C,SAAyBV,EAAKE,GAC1B,IAAMS,EAAOjB,EAAMM,EAAM,GAAGE,EAAM,GAClCS,EAAKP,UAAYO,EAAKP,SACtBT,EAAS,YAAID,IAmBkCkB,CAAgBJ,EAAIR,IAAKQ,EAAIN,MAHpD,SAKKM,EAAIK,QALAL,EAAIN,SAFZK,UAejB,gCACI,oBAAIX,UAAU,iBAAd,0BACA,6BACKF,EAAMoB,OACFC,QAAO,SAAAJ,GAAI,OAAIA,EAAKP,YACpBE,KAAI,SAAAK,GAAI,OACL,4CACaA,EAAKX,IADlB,oBACiCW,EAAKT,qB,MC/D/D,SAASc,EAAT,GAA2C,IAA5BC,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,KAAMC,EAAO,EAAPA,KACtC,OACI,uBAAMvB,UAAU,OAAhB,UACI,uBAAQA,UAAU,cAAlB,uBAGA,yBACIA,UAAU,eACVwB,KAAK,OACLC,MAAOF,EACPG,SAAUL,EAJd,UAMI,wBAAQI,MAAM,GAAGE,UAAQ,EAACnB,UAAQ,EAAlC,uBACCoB,OAAOC,QAAQP,GAAMZ,KAAI,WAAQC,GAAR,IAAEmB,EAAF,2BACtB,wBAAgBL,MAAOK,EAAvB,SACKA,GADQnB,YCgBlBoB,MA3Bf,WACI,MAAwBlC,mBAAS,IAAjC,mBAAOyB,EAAP,KAAaU,EAAb,KACA,EAAwBnC,mBAAS,IAAjC,mBAAO0B,EAAP,KAAaU,EAAb,KAeA,OAbAC,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEAC2B7C,IAD3B,OACUG,EADV,OAEIuC,EAAQvC,GAFZ,4CADY,uBAAC,WAAD,wBAKZ2C,KACD,IAQC,sBAAKpC,UAAU,MAAf,UAEI,cAAC,EAAD,CAAMqB,aARd,SAAsBgB,GAClBA,EAAEC,iBACFL,EAAQI,EAAEE,OAAOd,QAMqBH,KAAMA,EAAMC,KAAMA,IAE1C,KAATA,GAAe,cAAC5B,EAAD,CAAQC,MAAO0B,EAAKC,GAAM3B,YChBvC4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlD,MAAK,YAAkD,IAA/CmD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.d6ad967b.chunk.js","sourcesContent":["const API_URL = `https://demo1030918.mockable.io/`;\n\nexport function getData() {\n    return fetch(API_URL)\n        .then(response => response.json())\n}\n","import React, {useState} from \"react\";\nimport classNames from \"classnames\";\nimport './Sqare.scss';\n\nexport function Square({field}) {\n    const [cells, setCells] = useState([]);\n\n    function fillCells() {\n        const cellsData = [];\n        const numberOfCells = field;\n\n        for (let row = 1; row <= numberOfCells; row++) {\n            const rowData = [];\n            for (let col = 1; col <= numberOfCells; col++) {\n                const obj = {\n                    row: row,\n                    col: col,\n                    selected: false,\n\n                }\n                rowData.push(obj);\n            }\n            cellsData.push(rowData);\n        }\n        setCells(cellsData);\n    }\n\n    function handleCellHover(row, col) {\n        const cell = cells[row - 1][col - 1];\n        cell.selected = !cell.selected;\n        setCells([...cells]);\n    }\n\n    return (\n        <div className='content'>\n            <button\n                className='content__btn'\n                onClick={fillCells}\n            >Start</button>\n\n            <div className='content__interaction'>\n                <table className=\"square\">\n                    <tbody>\n                    {cells.map((row, i) =>\n                        <tr key={i} className=\"square__row\">\n                            {row.map(val =>\n                                <td key={val.col}\n                                    className={classNames('square__col',\n                                        {'square__col--active': val.selected})}\n                                    onMouseOver={() => handleCellHover(val.row, val.col)}\n                                >\n                                    {val.column}\n                                </td>\n                            )}\n                        </tr>\n                    )}\n                    </tbody>\n                </table>\n\n                <div>\n                    <h1 className='content__title'>Hover square</h1>\n                    <ul>\n                        {cells.flat()\n                            .filter(cell => cell.selected)\n                            .map(cell =>\n                                <li>\n                                    {`row: ${cell.row} column: ${cell.col}`}\n                                </li>\n                            )}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport './Form.scss';\n\nexport function Form({handleSubmit, data, mode}) {\n    return (\n        <form className='form'>\n            <lable  className='form__title'>\n                Pike mode\n            </lable>\n            <select\n                className='form__select'\n                name='mode'\n                value={mode}\n                onChange={handleSubmit}\n            >\n                <option value='' disabled selected>Pick mode</option>\n                {Object.entries(data).map(([key], i) => (\n                    <option key={i} value={key}>\n                        {key}\n                    </option>\n                ))}\n            </select>\n        </form>\n    )\n}\n","import React, {useEffect, useState} from 'react';\nimport './App.scss';\nimport {getData} from './api/data';\nimport {Square} from \"./components/Square/Square\";\nimport {Form} from \"./components/Form/Form\";\n\nfunction App() {\n    const [data, setData] = useState({});\n    const [mode, setMode] = useState('');\n\n    useEffect(() => {\n        async function fetchMyAPI() {\n            const response = await getData();\n            setData(response);\n        }\n        fetchMyAPI()\n    }, [])\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        setMode(e.target.value);\n    }\n\n    return (\n        <div className=\"App\">\n\n            <Form handleSubmit={handleSubmit} data={data} mode={mode}/>\n\n            {mode !== '' && <Square field={data[mode].field}/>}\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}